import 'package:json_annotation/json_annotation.dart';

part 'event.g.dart';

/// Represents an event to be sent to the Gameball API.
///
/// This class defines the structure of an event object with properties
/// for event data, player unique ID, optional mobile number, and optional email.
@JsonSerializable()
class Event {
  /// A map containing the actual event data.
  /// The key represents the event type, and the value is a map containing additional event-specific data.
  @JsonKey(name: "events")
  Map<String, Map<String, Object>> events;

  /// The unique identifier of the player associated with the event.
  @JsonKey(name: "playerUniqueId")
  String playerUniqueId;

  /// The player's mobile number (optional).
  @JsonKey(name: "mobile")
  String? mobileNumber;

  /// The player's email address (optional).
  @JsonKey(name: "email")
  String? email;

  /// Creates a new `Event` object.
  ///
  /// Arguments:
  ///   - `events`: The event data map (required).
  ///   - `playerUniqueId`: The player's unique ID (required).
  ///   - `mobileNumber`: The player's mobile number (optional).
  ///   - `email`: The player's email address (optional).
  Event({
    required this.events,
    required this.playerUniqueId,
    this.mobileNumber,
    this.email,
  });

  /// Converts the `Event` object to a JSON map.
  ///
  /// This method is typically used internally by the `json_serializable` package.
  Map<String, dynamic> toJson() => _$EventToJson(this);

  // Added factory constructor and fromJson method generated by json_serializable
  factory Event.fromJson(Map<String, dynamic> json) => _$EventFromJson(json);
}
